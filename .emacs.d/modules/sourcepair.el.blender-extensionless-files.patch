--- sourcepair.el-orig	2006-12-09 19:13:23.000000000 +0100
+++ sourcepair.el	2006-12-10 15:28:56.000000000 +0100
@@ -203,7 +203,21 @@
   (defun sourcepair-analyze-filename (filename)
 	(let* ((extension (concat (member ?. (append filename nil))))
 		   (basename (substring filename 0 (- 0 (length extension)))))
-	  (if (member extension sourcepair-header-extensions)
-		  (cons sourcepair-source-path (mapcar '(lambda (arg) (concat basename arg)) sourcepair-source-extensions))
-		(if (member extension sourcepair-source-extensions)
-			(cons sourcepair-header-path (mapcar '(lambda (arg) (concat basename arg)) sourcepair-header-extensions))))))
+	  ;; [blender] HACK: I do not know how to fix this properly (I am not good at Lisp), so ...
+	  ;; The above two lines do not work correctly if the file does not have an extension. In that
+	  ;; case *both* `basename' and `extension' are set to "", which is not desired. The following
+	  ;; `if' checks if the length of `filename' is not 0 (we have a filename) and the length of
+	  ;; `extension' is 0, which means that the file does not have an extension, so it sets
+	  ;; filename to basename.
+	  (if (and (= (length basename) 0)
+			   (not (= (length filename) 0)))
+		  (setq basename filename)
+		)
+		(if (member extension sourcepair-header-extensions)
+			(cons sourcepair-source-path
+				  (mapcar '(lambda (arg) (concat basename arg)) sourcepair-source-extensions))
+		  (if (member extension sourcepair-source-extensions)
+			  (cons sourcepair-header-path
+					(mapcar '(lambda (arg) (concat basename arg)) sourcepair-header-extensions))))
+		)
+	  )

   (defun sourcepair-find-one-of (path choices recurse)
 	(catch 'matching-filename
